- name: Borg client install
  hosts: Client
  become: true
  vars_files: 
        - vars/vars.yml
  tasks:
    - name: Install EPEL Repo package from standart repo
      yum:
        name: epel-release
        state: present
      tags:
        - epel-package
        - packages

    - name: install python3-packaging
      yum:
        name: python3-packaging
        enablerepo: powertools
        state: present  

    - name: Install borg
      yum:
        name: borgbackup
        state: latest

    - name: delete /root/.ssh/id_rsa
      shell: rm -rf /root/.ssh/id_rsa

    - name: generate key pair
      shell: ssh-keygen -P "" -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N /dev/null

    - name: fetch public key
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: tmp/
        flat: yes

    - name: generate key pair
      shell: ssh-keyscan -H 192.168.56.24 >> ~/.ssh/known_hosts

    - name: config borg-backup.timer
      template:
         src: "templates/borg-backup.timer.j2"
         dest: "/etc/systemd/system/borg-backup.timer"
         owner: root
         group: root
         mode: 0644
     
    - name: config borg-backup.service
      template:
         src: "templates/borg-backup.service.j2"
         dest: "/etc/systemd/system/borg-backup.service"
         owner: root
         group: root
         mode: 0644


- name: BackUp SRV config
  hosts: BackUp
  become: true
  tasks:
    - name: Install EPEL Repo package from standart repo
      yum:
        name: epel-release
        state: present

    - name: install python3-packaging
      yum:
         name: python3-packaging
         enablerepo: powertools
         state: present  

    - name: Install borg
      yum:
        name: borgbackup
        state: latest

    - name: Ensure group borg group exits
      group:
       name: borg
       state: present

    - name: Borg user create
      user:
        name: borg
        group: borg

    - name: BackUp directory create
      become_user: root
      file:
        path: /var/backup
        state: directory
    
    - name: Mount sdb to /var/backup
      shell: mkfs.ext4 /dev/sdb && mount /dev/sdb /var/backup/
      ignore_errors: true
    
    - name: rm lost&found
      become_user: root
      shell: rm -rf /var/backup/*
       
    - name: .ssh directory create
      file:
        path: /home/borg/.ssh
        state: directory
        owner: borg
        group: borg
        mode: '0700'

    - name: BackUp directory create
      file:
        path: /var/backup
        state: directory
        recurse: yes
        owner: borg
        group: borg
        mode: '700'

    - name: add master public key to BackUp
      authorized_key:
        user: borg
        key: "{{ lookup('file', 'tmp/id_rsa.pub') }}"

- name: Borg client install
  hosts: Client
  become: true
  tasks:

   - name: init repo
     shell: export BORG_PASSPHRASE='287285' && borg init  --encryption=repokey borg@192.168.56.24:/var/backup

   - name: start timer
     systemd:
      name: borg-backup.timer
      state: restarted
      enabled: yes
      daemon-reload: true
    
   - name: start service
     systemd:
      name: borg-backup.service
      state: started
      enabled: yes
      daemon-reload: true